# Based on https://github.com/ogrisel/python-appveyor-demo
# and https://github.com/jjhelmus/appveyor-build-conda-pyart
#
# Hint: before committing any changes in the yaml file verify it in
# the yaml online parser: http://yaml-online-parser.appspot.com/
#

# fetch repository as a zip archive
shallow_clone: true # default is "false"

environment:
  matrix:

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"
      UIA_SUPPORT: "NO"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      UIA_SUPPORT: "YES"

    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"
      UIA_SUPPORT: "YES"

    - PYTHON: "C:\\Python39"
      PYTHON_VERSION: "3.9"
      PYTHON_ARCH: "32"
      UIA_SUPPORT: "YES"

    - PYTHON: "C:\\Python310-x64"
      PYTHON_VERSION: "3.10"
      PYTHON_ARCH: "64"
      UIA_SUPPORT: "YES"

    - PYTHON: "C:\\Python311-x64"
      PYTHON_VERSION: "3.11"
      PYTHON_ARCH: "64"
      UIA_SUPPORT: "YES"

install:
  # install the appropriate Miniconda (Py2/Py3, 32/64 bit),
  # as well as pywin32, pillow and coverage
  - "powershell ./ci/install.ps1"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install .[dev]"

build: false # Not a C# project, build stuff at the test step instead.

test_script:
  # run the tests
  - "powershell ./ci/runTestsuite.ps1"

after_test:
  - codecov
  - coverage xml

artifacts:
  # Archive the generated coverage report in the ci.appveyor.com build report.
  - path: Coverage_report
