#
# `pywinauto` : GUI Application automation and testing library
#
# Copyright (C) 2006-2018 Mark Mc Mahon and Contributors
# https://github.com/pywinauto/pywinauto/graphs/contributors
# https://pywinauto.readthedocs.io/en/latest/credits.html
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of pywinauto nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

[project]
name = "pywinauto"
version = "0.6.8"
authors = [
    { name = "Mark Mc Mahon and Contributors", email = "pywinauto-users@lists.sourceforge.net" },
    { name = "Joel Van Eenwyk", email = "joel.vaneenwyk@gmail.com" },
]
description = "A set of Python modules to automate the Microsoft Windows GUI"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "BSD 3-clause" }
keywords = [
    "windows",
    "gui",
    "automation",
    "GuiAuto",
    "testing",
    "test",
    "desktop",
    "mouse",
    "keyboard",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: User Interfaces",
]

# long_description = """
# At it's simplest it allows you to send mouse and keyboard
# actions to windows dialogs and controls, but It has support for more complex
# controls also.
#
# Useful links
# -------------
# - Home page: https://pywinauto.github.io/
# - Docs Intro: https://pywinauto.readthedocs.io/en/latest/
# - Getting Started Guide: https://pywinauto.readthedocs.io/en/latest/getting_started.html
# - StackOverflow tag: https://stackoverflow.com/questions/tagged/pywinauto
# """

dependencies = [
    "Babel",
    "PyQt5; python_version > '3.6'",
    # Windows
    "comtypes>=1.4.0; sys_platform == 'win32'",
    "pywin32>=300; sys_platform == 'win32'",
    # General
    "pillow",
    'python-xlib; platform_system != "Windows"',
    # Compatibility
    "six",
    # Build
    "setuptools>=65.0.0",
]

[project.optional-dependencies]
dev = [
    # Docs
    "Sphinx>=1.3.0",
    "rst2pdf",
    # Format / Lint
    "ruff",
    "black==21.9b0",
    "pre-commit==2.15.0",
    "mypy==0.910",
    # Test
    "pytest-cov",
    "pytest-xdist",
    "pytest",
    "mock",
    "pynose>=1.5.1",
    # Coverage
    "codacy-coverage",
    "codecov",
    "coverage",
    # Build
    "cmake>=3.22.6",
    "scikit-build",
]

packages = ["pywinauto"]
# packages = [
#     "pywinauto",
#     "pywinauto.tests",
#     "pywinauto.controls",
#     "pywinauto.windows",
# ]

[project.urls]
Homepage = "https://joelvaneenwyk.github.io/pywinauto"
Source = "https://github.com/joelvaneenwyk/pywinauto"

[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[tool]
rye = { dev-dependencies = [
    "ruff>=0.4.2",
    "pytest>=8.1.2",
    "pynose>=1.5.1",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
] }

[tool.pdm]
distribution = true

[tool.setuptools]
include-package-data = false
py-modules = []

[tool.setuptools.packages.find]
where = ["."] # list of folders that contain the packages (["."] by default)
include = [
    "pywinauto",
] # package names should match these glob patterns (["*"] by default)
exclude = [] # exclude packages matching these glob patterns (empty by default)
namespaces = false # to disable scanning PEP 420 namespaces (true by defaul

[tool.coverage.run]
source = ["pywinauto/"]
omit = [
    "*/.venv/*",
    "*/.vscode/*",
    "*/build/*",
    "*/previousReleases/*",
    "*/.git/*",
    # omit anything in a .local directory anywhere
    "*/.local/*",
    # omit everything in /usr
    "/usr/*",
    # omit this single file
    "utils/tirefire.py",
]

[tool.ruff]
line-length = 120

[tool.flake8]
ignore = [
    # list comprehension redefines ...
    "F812",
    # block comment should start with '# '...
    "E265",
]
max-line-length = 120
